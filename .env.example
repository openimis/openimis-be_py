# Database PSQL
PSQL_DB_USER=IMISuser
PSQL_DB_PASSWORD=IMISuser@1234
PSQL_DB_PORT=5432
PSQL_DB_ENGINE=django.db.backends.postgresql
PSQL_DB_HOST=127.0.0.1
PSQL_DB_NAME=test_imis
# Database MSSQL
MSSQL_DB_PORT=1433
MSSQL_DB_ENGINE=mssql
MSSQL_DB_USER=SA
MSSQL_DB_PASSWORD=IMISuser@1234
MSSQL_DB_NAME=test_imis
MSSQL_DB_HOST=127.0.0.1

DB_NAME=test_imis
DB_TEST_NAME=test_imis

# Site root that will prefix all exposed endpoints. It's required when working with openIMIS frontend
SITE_ROOT=api
# Should the debug be on (i.e. debug information will be displayed)
MODE=DEV
# this will also show the DB request in the console
DJANGO_DB_LOG_HANDLER=console
# Photo path root used in insuree module. Only used if InsureeConfig value not specified. Comment out for default.
#PHOTO_ROOT_PATH=<photo path>
# Should the database be migrated before start (entrypoint.sh - docker setup). Will be migrated anyway if $SITE_ROOT=api. Comment out for False
DJANGO_MIGRATE=True
# Should the modules be searched for scheduled tasks. Comment out for false
SCHEDULER_AUTOSTART=True
PROJECT_NAME=dev
NEW_OPENIMIS_HOST=dev-openimis.org
HTTP_PORT=80
HTTPS_PORT=443
DB_DEFAULT=postgresql
# Comment  if you don't want to initialize with the demo dataset
DEMO_DATASET=true

DB_BRANCH=develop
GW_BRANCH=develop
BE_BRANCH=develop
FE_BRANCH=develop

# Lockout mechanism
LOGIN_LOCKOUT_FAILURE_LIMIT=5 # Allowed login failures before lockout
LOGIN_LOCKOUT_COOLOFF_TIME=5 # Lockout duration in minutes

PASSWORD_MIN_LENGTH=8
PASSWORD_UPPERCASE=1 # Minimum number of uppercase letters
PASSWORD_LOWERCASE=1 # Minimum number of lowercase letters
PASSWORD_DIGITS=1 # Minimum number of digits
PASSWORD_SYMBOLS=1 # Minimum number of symbols
PASSWORD_SPACES=1 # Maximum number of spaces allowed

CSRF_TRUSTED_ORIGINS=http://localhost:3000,http://localhost:8000 # Define the trusted origins for CSRF protection, separated by commas

# Rate limiting settings
RATELIMIT_CACHE=default  # The cache alias to use for rate limiting
RATELIMIT_KEY=ip  # Key to identify the client; 'ip' means it will use the client's IP address
RATELIMIT_RATE=150/m  # Rate limit (150 requests per minute)
RATELIMIT_METHOD=ALL  # HTTP methods to rate limit; 'ALL' means all methods
RATELIMIT_GROUP=graphql  # Group name for the rate limit
RATELIMIT_SKIP_TIMEOUT=False  # Whether to skip rate limiting during c
